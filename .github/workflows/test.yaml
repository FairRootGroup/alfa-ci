name: Test

on: [push, pull_request]

jobs:
  unit:
    name: Unit tests
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.6, 3.7, 3.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest coverage cli-test-helpers
          python -m pip install -e .
          python -c 'import sys; print(sys.version)'
          python -c 'import alfaci.version; print(alfaci.version.PKG_VERSION)'
      - name: Run pytest
        run: python -m coverage run -m pytest -v
      - name: Display coverage report
        run: python -m coverage report -m
      - name: Generate xml coverage report
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == 3.8 }}
        run: python -m coverage xml
      - name: Upload coverage xml report to codecov.io
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == 3.8 }}
        uses: codecov/codecov-action@v1.0.7
        with:
          fail_ci_if_error: true # optional (default = false)
  lint:
    name: Linter tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest cli-test-helpers pylint flake8
          python -m pip install -e .
          python -c 'import sys; print(sys.version)'
          python -c 'import alfaci.version; print(alfaci.version.PKG_VERSION)'
      - name: Run pylint
        run: python -m pylint lib tests
      - name: Run flake8
        run: python -m flake8
  format:
    name: Formatter tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install
        run: |
          python -m pip install --upgrade pip
          python -m pip install yapf
          python -m pip install -e .
          python -c 'import sys; print(sys.version)'
          python -c 'import alfaci.version; print(alfaci.version.PKG_VERSION)'
      - name: Run yapf
        run: python -m yapf -r -d lib tests
